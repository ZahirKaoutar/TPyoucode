#include <stdio.h>
#include <string.h>

struct Joueur {
    int id;
    char nom[100];
    int numeroMaillot;
    char poste[20];
    int age;
    int buts;
};

struct Joueur tab[100];

int nmr = 0;  
char roles[4][20] = {"gardiant", "défenseur", "milieu", "attaquant"};

void Ajoutfois() {
    char role[20];
    printf("Entrer le nom: ");
    scanf(" %[^\n]", tab[nmr].nom);

    printf("Numéro Maillot: ");
    scanf("%d", &tab[nmr].numeroMaillot);

    printf("Age: ");
    scanf("%d", &tab[nmr].age);

    printf("Buts: ");
    scanf("%d", &tab[nmr].buts);

    printf("Entrer le rôle de joueur ('gardiant','défenseur', 'milieu','attaquant'): ");
    scanf(" %[^\n]", role);

    int valide = 0;
    for (int i = 0; i < 4; i++) {
        if (strcmp(role, roles[i]) == 0) {
            valide = 1;
            strcpy(tab[nmr].poste, role);
            break;
        }
    }

    if (!valide) {
        printf("Erreur : il faut entrer un des rôles suivants : gardiant, défenseur, milieu, attaquant\n");
        scanf(" %[^\n]", role);
        return;
    }

    tab[nmr].id = nmr + 1;
    nmr++;
}

void Ajouterjoueur() {
    char choix[20];
    int nmbjou;

    do {
        printf("Entrer choix (un / plusieurs / stop) : ");
        scanf(" %19[^\n]", choix);

        if (strcmp(choix, "un") == 0) {
            Ajoutfois();
        } else if (strcmp(choix, "plusieurs") == 0) {
            printf("Combien de joueurs voulez-vous ajouter en une fois ? ");
            scanf("%d", &nmbjou);

            while (nmbjou <= 0 || nmbjou > 100 - nmr) {
                printf("Le nombre doit être positif et <= %d : ", 100 - nmr);
                scanf("%d", &nmbjou);
            }

            for (int i = 0; i < nmbjou; i++) {
                Ajoutfois();
            }
        }
    } while (nmr < 100 && strcmp(choix, "stop") != 0);
}

void echangerJoueurs(int i, int j) {
    struct Joueur temp;

    temp = tab[i];
    tab[i] = tab[j];
    tab[j] = temp;
}


void trierParNom(struct Joueur arr[], int taille) {
    struct Joueur temp;
    for (int i = 0; i < taille - 1; i++) {
        for (int j = i + 1; j < taille; j++) {
            if (strcmp(arr[i].nom, arr[j].nom) > 0) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}


void trierParAge(struct Joueur arr[], int taille) {
    struct Joueur temp;
    for (int i = 0; i < taille - 1; i++) {
        for (int j = i + 1; j < taille; j++) {
            if (arr[i].age > arr[j].age) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}
    
void AfficherJoueur() {
    // Pour éviter d'afficher plusieurs fois le même poste
    char postesDéjàAffichés[4][20];
    int nbPostesAffichés = 0;

    for (int i = 0; i < nmr; i++) {
        int déjàAffiché = 0;

        // Vérifie si ce poste a déjà été traité
        for (int k = 0; k < nbPostesAffichés; k++) {
            if (strcmp(tab[i].poste, postesDéjàAffichés[k]) == 0) {
                déjàAffiché = 1;
                break;
            }
        }

        if (déjàAffiché) {
            continue;
        }

        // Sinon, ajoute ce poste à la liste des postes déjà traités
        strcpy(postesDéjàAffichés[nbPostesAffichés], tab[i].poste);
        nbPostesAffichés++;

        // Créer le groupe de joueurs du même poste
        struct Joueur groupe[100];
        int tailleGroupe = 0;

        for (int j = 0; j < nmr; j++) {
            if (strcmp(tab[j].poste, tab[i].poste) == 0) {
                groupe[tailleGroupe++] = tab[j];
            }
        }

        // Tri du groupe : d’abord par nom, puis âge si noms identiques
        for (int a = 0; a < tailleGroupe - 1; a++) {
            for (int b = a + 1; b < tailleGroupe; b++) {
                if (strcmp(groupe[a].nom, groupe[b].nom) > 0 || 
                    (strcmp(groupe[a].nom, groupe[b].nom) == 0 && groupe[a].age > groupe[b].age)) {
                    struct Joueur temp = groupe[a];
                    groupe[a] = groupe[b];
                    groupe[b] = temp;
                }
            }
        }

        // Affichage
        printf("\n--- Joueurs au poste de %s ---\n", tab[i].poste);
        for (int x = 0; x < tailleGroupe; x++) {
            printf("ID: %d\n", groupe[x].id);
            printf("Nom: %s\n", groupe[x].nom);
            printf("Poste: %s\n", groupe[x].poste);
            printf("Numéro Maillot: %d\n", groupe[x].numeroMaillot);
            printf("Buts: %d\n", groupe[x].buts);
            printf("Âge: %d\n", groupe[x].age);
            printf("-------------------------\n");
        }
    }
}

         
 
   
 

int main() {
    int choixMenu = 1;
    int nmb;

    do {
        printf("Choisir le nombre que vous voulez:\n 1 pour ajouter\n 2 pour afficher\n 3 pour modifier\n 4 pour supprimer\n 5 pour rechercher\n");
        scanf("%d", &nmb);

        switch (nmb) {
            case 1:
                Ajouterjoueur();
                break;
            case 2:
                AfficherJoueur();
                printf("Fonction Afficherjoueur non encore implémentée.\n");
                break;
            case 3:
                // Modifierjoueur(); // À implémenter
                printf("Fonction Modifierjoueur non encore implémentée.\n");
                break;
            case 4:
                // Supprimerjoueur(); // À implémenter
                printf("Fonction Supprimerjoueur non encore implémentée.\n");
                break;
            case 5:
                // Rechercher(); // À implémenter
                printf("Fonction Rechercher non encore implémentée.\n");
                break;
            default:
                printf("Choix invalide.\n");
        }

        printf("Choisir 1 pour afficher le menu, 0 pour sortir : ");
        scanf("%d", &choixMenu);

    } while (choixMenu == 1);

    return 0;
}
